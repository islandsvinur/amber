<!--
    
  Ambient Earth
  Christian Luijten <christian@luijten.org>

  Copyright(c)2006 Center for Analysis and Design of Intelligent Agents
                   Reykjavik University
                   All rights reserved

                   http://cadia.ru.is/

  Redistribution and use in source and binary forms, with or without
  modification, is permitted provided that the following conditions are met:

  - Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  - Neither the name of its copyright holders nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.

-->
<project name="Ambient Earth" default="dist" basedir=".">
  <property name="src" location="src" />
  <property name="dist" location="dist" />
  <property name="docs" location="javadoc" />
  <property name="lib" location="lib" />
  <property name="build" location="build" />

  <target name="init">
    <tstamp />
  </target>

  <path id="project.class.path">
    <pathelement path="${java.class.path}" />
    <pathelement location="lib/JavaOpenAIR.jar" />
  </path>

  <target name="build" depends="init">
    <mkdir dir="${build}" />
    <mkdir dir="${dist}" />
    <!-- <unjar src="lib/JavaOpenAIR.jar" dest="${build}" /> -->
    <javac srcdir="${src}" destdir="${build}" classpathref="project.class.path" />
  </target>

  <target name="crawler" depends="build">
    <jar destfile="${dist}/Crawler.jar" basedir="${build}">
        <manifest>
            <attribute name="Main-Class" value="amber.Crawler" />
        </manifest>
    </jar>
  </target>

  <target name="parser" depends="build">
    <jar destfile="${dist}/Sieve.jar" basedir="${build}">
        <manifest>
            <attribute name="Main-Class" value="amber.Sieve" />
        </manifest>
    </jar>
  </target>

  <target name="visualizer" depends="build">
    <jar destfile="${dist}/ShowOff.jar" basedir="${build}">
        <manifest>
            <attribute name="Main-Class" value="amber.ShowOff" />
        </manifest>
    </jar>
  </target>

  <target name="website" depends="design-document">
    <exec dir="documentation/website" executable="webgen" failonerror="false" />
    <copy file="documentation/design/design.pdf" todir="documentation/website/output/amber" />
  </target>
  
  <target name="report-document">
    <exec dir="documentation/report" executable="rubber" failonerror="false">
        <arg line="-d report.tex" />
    </exec>
    <copy file="documentation/report/report.pdf" todir="documentation" failonerror="false" />
    <exec dir="documentation/report" executable="rubber" failonerror="false">
        <arg line="--clean report.tex" />
    </exec>
  </target>

  <target name="design-document">
    <exec dir="documentation/design" executable="rubber" failonerror="false">
        <arg line="-d design.tex" />
    </exec>
    <copy file="documentation/design/design.pdf" todir="documentation" failonerror="false" />
    <exec dir="documentation/design" executable="rubber" failonerror="false">
        <arg line="--clean design.tex" />
    </exec>
  </target>

  <target name="docs" depends="init, report-document, design-document, website">
    <javadoc packagenames="amber.*" 
             sourcepath="${src}" 
             destdir="${docs}" 
             classpathref="project.class.path" />
  </target>

  <target name="dist" depends="crawler, parser, visualizer">
  </target>

  <target name="clean">
    <delete dir="${build}" />
    <delete dir="${docs}" />
    <delete dir="documentation/website/output" />
    <delete file="documentation/design.pdf" />
    <delete file="documentation/report.pdf" />
    <exec dir="documentation/report" executable="rubber" failonerror="false">
        <arg line="--clean report.tex" />
    </exec>
    <exec dir="documentation/design" executable="rubber" failonerror="false">
        <arg line="--clean design.tex" />
    </exec>
  </target>
  
  <target name="distclean">
    <delete dir="${dist}" />
  </target>
</project>
